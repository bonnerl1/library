<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ict.librarysystem.mapper.BookMapper">
    <resultMap id="BaseResultMap" type="com.ict.librarysystem.domian.Book">
        <!--@mbg.generated-->
        <!--@Table book-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="author" jdbcType="VARCHAR" property="author"/>
        <result column="price" jdbcType="DOUBLE" property="price"/>
        <result column="booktype" jdbcType="VARCHAR" property="booktype"/>
        <result column="available" jdbcType="INTEGER" property="available"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, `name`, author, price, booktype, available
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from book
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete
        from book
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.ict.librarysystem.domian.Book"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into book (`name`, author, price,
                          booktype, available)
        values (#{name,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE},
                #{booktype,jdbcType=VARCHAR}, #{available,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.ict.librarysystem.domian.Book"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into book
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                `name`,
            </if>
            <if test="author != null">
                author,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="booktype != null">
                booktype,
            </if>
            <if test="available != null">
                available,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                #{author,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=DOUBLE},
            </if>
            <if test="booktype != null">
                #{booktype,jdbcType=VARCHAR},
            </if>
            <if test="available != null">
                #{available,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ict.librarysystem.domian.Book">
        <!--@mbg.generated-->
        update book
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                author = #{author,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DOUBLE},
            </if>
            <if test="booktype != null">
                booktype = #{booktype,jdbcType=VARCHAR},
            </if>
            <if test="available != null">
                available = #{available,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ict.librarysystem.domian.Book">
        <!--@mbg.generated-->
        update book
        set `name`    = #{name,jdbcType=VARCHAR},
            author    = #{author,jdbcType=VARCHAR},
            price     = #{price,jdbcType=DOUBLE},
            booktype  = #{booktype,jdbcType=VARCHAR},
            available = #{available,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="queryBookSelective" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from book
        <where>
            <if test="name != null and name != ''">
                and name like concat('%', #{name,jdbcType=VARCHAR}, '%')
            </if>
            <if test="author != null and author != ''">
                and author like concat('%', #{author,jdbcType=VARCHAR}, '%')
            </if>
            <if test="available != null">
                and available = #{available,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <select id="selectAvialableByBookName" resultType="java.lang.Integer">
        select available
        from book
        where name = #{name,jdbcType=VARCHAR}
    </select>

    <select id="selectBookidByBookName" resultType="int">
        select id
        from book
        where name = #{name,jdbcType=VARCHAR}
    </select>
</mapper>